name: build-playwright-test

on:
  pull_request:
    types: [opened, reopened, synchronize, labeled, unlabeled]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  playwright-tests:
    runs-on:
      - codebuild-host-inventory-frontend-${{ github.run_id }}-${{ github.run_attempt }}
      - instance-size:large
      - buildspec-override:true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Create front-end .env file
        run: |
          # Check if the secrets are set
          if [ -z "$PLAYWRIGHT_USER" ]; then
            echo "Error: PLAYWRIGHT_USER secret is not set."
            exit 1
          fi

          if [ -z "$PLAYWRIGHT_PASSWORD" ]; then
            echo "Error: PLAYWRIGHT_PASSWORD secret is not set."
            exit 1
          fi

          # Create the .env file and write the secrets and other variables to it
          {
            echo "PLAYWRIGHT_USER=$PLAYWRIGHT_USER"
            echo "PLAYWRIGHT_PASSWORD=$PLAYWRIGHT_PASSWORD"
            echo "BASE_URL=https://stage.foo.redhat.com:1337"
            echo "CI=true"
            echo "PROXY=$PROXY"
          } >> .env

          echo ".env file created successfully."
      
      - name: Get current PR URL
        id: get-pr-url
        run: |
          # Extract the pull request URL from the event payload
          pr_url=$(jq -r '.pull_request.html_url' < "$GITHUB_EVENT_PATH")
          echo "Pull Request URL: $pr_url"
          # Set the PR URL as an output using the environment file
          echo "pr_url=$pr_url" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
      
      - name: Install front-end dependencies
        run: npm ci

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Increase file watchers limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      
      - name: Update /etc/hosts
        run: sudo npm run patch:hosts

      - name: Run testing proxy
        run: docker run -d --network=host -e HTTPS_PROXY=$RH_PROXY_URL -e ROUTES_JSON_PATH=/config/routes-ci.json  -v "$(pwd)/config:/config:ro,Z" --name frontend-development-proxy quay.io/redhat-user-workloads/hcc-platex-services-tenant/frontend-development-proxy
        
      - name: Start front-end server
        run: |
          npm run static &
          npx wait-on http://localhost:8003/apps/inventory/

      - name: Run front-end Playwright tests
        run: USE_CTRF=1 CURRENTS_PROJECT_ID=ER8tBy CURRENTS_RECORD_KEY=$CURRENTS_RECORD_KEY CURRENTS_CI_BUILD_ID="${{ github.repository }}-${{ github.run_id }}-${{ github.run_attempt }}" npx playwright test

      - name: Publish front-end Test Report
        uses: ctrf-io/github-test-reporter@v1
        with:
          report-path: './playwright-ctrf/playwright-ctrf.json'
        if: ${{ !cancelled() }}

      - name: Store front-end Test report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 10
